apply plugin: 'com.android.application'
apply plugin: 'jacoco'
if (!rootProject.plugins.hasPlugin("org.sonarqube")) {
	println("sonarcube not yet applied")
	apply plugin: 'org.sonarqube'
}

android {
	compileSdkVersion rootProject.ext.globalCompileSDK
    defaultConfig {
		manifestPlaceholders = [ appName:"Rates" ]

        applicationId "hu.tvarga.rates"
		minSdkVersion rootProject.ext.globalMinSDK
		targetSdkVersion rootProject.ext.globalTargetSDK
		versionCode readVersionCode(project)
		versionName readVersionName(project)

		multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

	buildTypes {
		debug {
			testCoverageEnabled true
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	compileOptions {
		targetCompatibility JavaVersion.VERSION_1_8
		sourceCompatibility JavaVersion.VERSION_1_8
	}
}

// default config values (prod)
apply from: '../default_config.gradle'

// add signing config
apply from: '../signing_configs.gradle'

// add build types
apply from: '../build_types.gradle'

apply from: '../common_dependencies.gradle'

dependencies {
	implementation project(":common")
	implementation project(":conversion")
}

def getAndroidTestCoverageFiles() {
	FileCollection androidTestCoverageFiles = fileTree("$buildDir/outputs/code-coverage/connected") {
		include "**/*.ec"
	}
	return androidTestCoverageFiles
}

sonarqube {
	properties {
		property "sonar.jacoco.itReportPath", getAndroidTestCoverageFiles()
		// NOTE: By default the java source set and not the android source set is used
		property "sonar.sources", android.sourceSets.main.java.srcDirs

		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "${buildDir}/intermediates/classes/debug"
		property "sonar.java.test.binaries", "${buildDir}/intermediates/classes/test/debug"
		property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/testDebugUnitTest.exec"
		property "sonar.junit.reportsPath", "${buildDir}/test-results/testDebugUnitTest"

		// sonar lint plugin
		//
		// ATTENTION: this file must match the chosen build flavor in the
		// CI build configurations, otherwise lint issues will not be visible in the sonar
		// report. CI Build Configs:
		//  - Android CI -> Sonar preview report generation
		//  - Android Master Sonar ->  SonarQube
		property "sonar.android.lint.report", "${buildDir}/reports/lint-results-debug.xml"
	}
}